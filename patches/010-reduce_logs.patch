--- a/log.hpp
+++ b/log.hpp
@@ -34,18 +34,18 @@ std::string log_now()
     for_log_use_stream
 
 #define PRINT_INFO                                                   \
-    std::clog << log_now() << " " << for_log_use_stream.str();       \
+    std::clog << log_now() << " " << for_log_use_stream.str() << std::flush;\
     std::cout << for_log_use_stream.str();
 #define PRINT_ERR                                                    \
-    std::clog << log_now() << " " << for_log_use_stream.str();       \
+    std::clog << log_now() << " " << for_log_use_stream.str() << std::flush;\
     std::cerr << for_log_use_stream.str();
 #ifdef EASYDRCOM_PRINT_DBG_ON_SCREEN
     #define PRINT_DBG                                                \
-        std::clog << log_now() << " " << for_log_use_stream.str();   \
+        std::clog << log_now() << " " << for_log_use_stream.str() << std::flush;\
         std::cout << for_log_use_stream.str();
 #else
     #define PRINT_DBG                                                \
-        std::clog << log_now() << " " << for_log_use_stream.str();
+        std::clog << log_now() << " " << for_log_use_stream.str() << std::flush;
 #endif
 
 #define LOG_INFO(section, info)                                      \
@@ -59,20 +59,42 @@ std::string log_now()
     #define LOG_DBG(db)
 #endif
 
-#define U31_LOG_INFO(info)       LOG_INFO("U31", info)
-#define U31_LOG_ERR(err)         LOG_ERR("U31", err)
-#define U31_LOG_DBG(db)          LOG_DBG("U31", db)
-
-#define U62_LOG_INFO(info)       LOG_INFO("U62", info)
-#define U62_LOG_ERR(err)         LOG_ERR("U62", err)
-#define U62_LOG_DBG(db)          LOG_DBG("U62", db)
-
-#define EAP_LOG_INFO(info)  LOG_INFO("EAP", info)
-#define EAP_LOG_ERR(err)    LOG_ERR("EAP", err)
-#define EAP_LOG_DBG(db)     LOG_DBG("EAP", db)
-
-#define SYS_LOG_INFO(info)  LOG_INFO("EasyDrcom", info)
-#define SYS_LOG_ERR(err)    LOG_ERR("EasyDrcom", err)
-#define SYS_LOG_DBG(db)     LOG_DBG("EasyDrcom", db)
+#ifdef EASYDRCOM_DEBUG
+	#define U31_LOG_INFO(info)       LOG_INFO("U62", info)
+	#define U31_LOG_ERR(err)         LOG_ERR("U31", err)
+	#define U31_LOG_DBG(db)          LOG_DBG("U31", db)
+
+	#define U62_LOG_INFO(info)       LOG_INFO("U31", info)
+	#define U62_LOG_ERR(err)         LOG_ERR("U31", err)
+	#define U62_LOG_DBG(db)          LOG_DBG("U31", db)
+
+	#define EAP_LOG_INFO(info)  LOG_INFO("EAP", info)
+	#define EAP_LOG_ERR(err)    LOG_ERR("EAP", err)
+	#define EAP_LOG_DBG(db)     LOG_DBG("EAP", db)
+
+	#define SYS_LOG_INFO(info)  LOG_INFO("EasyDrcom", info)
+	#define SYS_LOG_ERR(err)    LOG_ERR("EasyDrcom", err)
+	#define SYS_LOG_DBG(db)     LOG_DBG("EasyDrcom", db)
+
+	#define SVR_LOG_ERR(err)    LOG_INFO("EAP", err)
+#else
+	#define U31_LOG_INFO(info)       
+	#define U31_LOG_ERR(err)         
+	#define U31_LOG_DBG(db)          
+
+	#define U62_LOG_INFO(info)       
+	#define U62_LOG_ERR(err)         
+	#define U62_LOG_DBG(db)          
+
+	#define EAP_LOG_INFO(info)  
+	#define EAP_LOG_ERR(err)    
+	#define EAP_LOG_DBG(db)     
+
+	#define SYS_LOG_INFO(info)  LOG_INFO("EasyDrcom", info)
+	#define SYS_LOG_ERR(err)    LOG_ERR("EasyDrcom", err)
+	#define SYS_LOG_DBG(db)     
+
+	#define SVR_LOG_ERR(err)    LOG_ERR("Server",err)
+#endif
 
 #endif // __INCLUDE_LOG__
--- a/main.cpp
+++ b/main.cpp
@@ -77,7 +77,7 @@ struct easy_drcom_config {
 } conf;
 
 // Log Config
-#define EASYDRCOM_DEBUG
+//#define EASYDRCOM_DEBUG
 //#define EASYDRCOM_PRINT_DBG_ON_SCREEN
 #include "log.hpp"
 
@@ -282,7 +282,7 @@ void online_func()
             
             if (state != OFFLINE_PROCESSING)
             {
-                SYS_LOG_INFO("Connection broken, try to redial after 5 seconds." << std::endl);
+                SYS_LOG_ERR("Connection broken, try to redial after 5 seconds." << std::endl);
                 std::this_thread::sleep_for(std::chrono::seconds(5));
             }
         }
--- a/eap_dealer.hpp
+++ b/eap_dealer.hpp
@@ -393,13 +393,15 @@ public:
                 memcpy(&noti[0], ((uint8_t*)eap_header + 4 + 5), // 4 - EAPol Header, 5 - EAP Header
                        ntohs(eap_header->eap_length) - 5);
                 
-                EAP_LOG_INFO("Gateway returns: Request, Notification: " << noti << std::endl);
+                SVR_LOG_ERR("Gateway returns: Request, Notification: " << noti << std::endl);
                 
+		/*
                 if (!noti.compare("userid error1"))
                     EAP_LOG_INFO("Tips: Account or password authentication fails, the system does not exist in this account." << std::endl);
                 
                 if (!noti.compare("userid error3"))
                     EAP_LOG_INFO("Tips: Account or password authentication fails, the system does not exist in this account or your account has arrears down." << std::endl);
+		*/
                 
                 logoff(gateway_mac); // Need to send a logoff, or the gateway will always send notification
                 
